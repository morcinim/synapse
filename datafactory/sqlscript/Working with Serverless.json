{
	"name": "Working with Serverless",
	"properties": {
		"description": "test of working with Serverless pool",
		"content": {
			"query": "-- https://docs.microsoft.com/en-us/learn/modules/create-metadata-objects-azure-synapse-serverless-sql-pools/4-create-external-data-sources\n-- see sample script at https://github.com/Azure-Samples/Synapse/blob/main/SQL/Samples/LdwSample/SampleDB.sql\n-- version 1\n\n-- define database scoped credential\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'fQv2fKq#FN7r'\nCREATE DATABASE SCOPED CREDENTIAL [inadaylake] WITH IDENTITY='User Identity' \n\n-- define datasource location - point to datalake container\nIF (EXISTS(SELECT * FROM sys.external_data_sources WHERE name = 'SalesDatasource')) BEGIN\n    DROP EXTERNAL DATA SOURCE SalesDatasource\nEND\nCREATE EXTERNAL DATA SOURCE SalesDatasource WITH ( \n    LOCATION = 'https://inadaylake.dfs.core.windows.net', \n    CREDENTIAL = inadaylake \n); \n\n-- define formats for files: .csv and .parquet\nCREATE EXTERNAL FILE FORMAT BarCsvWithHeaderFormat \nWITH (   \n    FORMAT_TYPE = DELIMITEDTEXT, \n    FORMAT_OPTIONS ( FIELD_TERMINATOR = '|', STRING_DELIMITER = '', FIRST_ROW = 2   ) \n); \nGO \nCREATE EXTERNAL FILE FORMAT ParquetFormat WITH (  FORMAT_TYPE = PARQUET ); \n\n-- read ad hoc paruqe format\nSELECT TOP 10 * \nFROM \n    OPENROWSET( \n        BULK 'wwi/factsale-parquet/2012/*/*/*.snappy.parquet', \n        DATA_SOURCE = 'SalesDatasource', \n        FORMAT='PARQUET' \n    ) AS sales\n\n-- create view\nDROP VIEW IF EXISTS SmallSalesP; \nGO \n \nCREATE VIEW SmallSalesP AS \nSELECT *  \nFROM OPENROWSET( \n        BULK 'wwi/factsale-parquet/2012/*/*/*.snappy.parquet', \n        DATA_SOURCE = 'SalesDatasource', \n        FORMAT='PARQUET' \n    )\n AS [r];\n-- create external table on csv files\nIF (EXISTS(SELECT * FROM sys.external_tables WHERE name = 'SalesC')) BEGIN\n    DROP EXTERNAL TABLE SalesC\nEND\nCREATE EXTERNAL TABLE SalesC ( \n    SaleKey INT,\n    CityKey INT,\n    CustomerKey INT,\n    BillToCustomerKey INT,\n    StockItemKey INT,\n    DeliveryDateKey DATETIME2,\n    SalespersonKey INT,\n    WWIInvoiceID INT,\n    Description VARCHAR(256) COLLATE Latin1_General_100_BIN2_UTF8,\n    Package VARCHAR(32) COLLATE Latin1_General_100_BIN2_UTF8,\n    Quantity INT,\n    UnitPrice FLOAT,\n    TaxRate FLOAT,\n    TotalExcludingTax FLOAT,\n    TaxAmount FLOAT,\n    Profit FLOAT,\n    TotalIncludingTax FLOAT,\n    TotalDryItems INT,\n    TotalChillerItems INT,\n    LineageKey INT\n    ) \n    WITH ( \n        LOCATION = 'wwi/factsale-csv/2012/*/*/*.csv', \n        DATA_SOURCE = SalesDatasource, \n        FILE_FORMAT = BarCsvWithHeaderFormat \n); \n\n\nUSE [SqlOnDemand01]; GO \n-- count sales\nSELECT  count(*) from [SalesC]\n\nSELECT \n    CustomerKey, SUM(Quantity) AS TotalQuantity, Sum(UnitPrice*TotalDryItems) AS TotalCost\nFROM [SalesC]\nGROUP BY CustomerKey\nORDER BY \n    [CustomerKey] ASC;\nGO \n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "SQLOnDemand01",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}